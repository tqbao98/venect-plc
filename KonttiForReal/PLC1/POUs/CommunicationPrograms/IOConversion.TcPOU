<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.18">
  <POU Name="IOConversion" Id="{241e541d-1429-41f7-a6f5-b51ae6e6a06a}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM IOConversion
VAR
	i: INT;
	EL3433DataMain 	: ARRAY[1..3] OF EL3433SyncData;
	EL3433DataSolar	: EL3433SyncData;
	nFlowVoltage: REAL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[GVL.fTE[1] := HWVar.iAI1_VK[4]/10.0; // from solar to kattila temp
GVL.fTE[18] := HWVar.iAI1_JK[1]/10.0; // from kattila to solar temp

GVL.fTE[5] := HWVar.iAI1_JK[2]/10.0; // kattila out temp
GVL.fTE[6] := HWVar.iAI1_VK[3]/10.0; // tank1 in temp
GVL.fTE[7] := HWVar.iAI1_VK[2]/10.0; // tank2 in temp
GVL.fTE[8] := HWVar.iAI1_VK[1]/10.0; // tank8 in temp

GVL.fTE[15] := HWVar.iAI2_VK[1]/10.0; // lauhdutin in temp 
GVL.fTE[16] := HWVar.iAI2_VK[3]/10.0; // lauhdutin out temp

GVL.fTE[19] := HWVar.iAI1_JK[3]/10.0; // exhaust temp
GVL.fTE[17] := HWVar.iAI1_JK[4]/10.0; // kattila room temp

nFlowVoltage := INT_TO_REAL(HWVar.iKL3064[1])*0.0003 + 0.0008; // 12 bits, output 0.525-2.6V, range 0-1L/s
GVL.fFE := (46.606*EXPT(nFlowVoltage,3) - 181.24*EXPT(nFlowVoltage,2) + 258.22*nFlowVoltage -93.735) * 1000 / 3600 ;

GVL.stPrimaryFan.nTemp := HWVar.stKL2761_in.iDataIn; //read prim fan terminal temp
HWVar.stKL2761_out.iDataOut := GVL.stPrimaryFan.nSpeed*32767/100; //control prim fan speed

FOR i:= 1 TO 3 DO
	GVL.stMain[i].fCurrent := TO_REAL(HWVar.EL3433_Grid[i].dCurrent)*0.000001;
	GVL.stMain[i].fVoltage := TO_REAL(HWVar.EL3433_Grid[i].dVoltage)*0.0001;
	GVL.stMain[i].fP := TO_REAL(HWVar.EL3433_Grid[i].dPower)*0.01;
	EL3433DataMain[i](
		pstEL3433Data := ADR(GVL.stMain[i]),
		pstEL3433IO := ADR(HWVar.EL3433_Grid[i]),
		pstEL3433OutputIndex := ADR(HWVar.EL3433_GridIndex[i])
	);
END_FOR
GVL.stSolarL1.fCurrent := TO_REAL(HWVar.EL3433_Solar.dCurrent)*0.000001;
GVL.stSolarL1.fVoltage := TO_REAL(HWVar.EL3433_Solar.dVoltage)*0.0001;
GVL.stSolarL1.fP := TO_REAL(HWVar.EL3433_Solar.dPower)*0.01;
	EL3433DataSolar(
		pstEL3433Data := ADR(GVL.stSolarL1),
		pstEL3433IO := ADR(HWVar.EL3433_Solar),
		pstEL3433OutputIndex := ADR(HWVar.EL3433_SolarIndex)
	);
//EL3433DAQ(ADR(GVL.stMain[1]],ADR(HWVar.EL3433_Grid[1]),ADR(HWVar.EL3433_GridIndex[1]));]]></ST>
    </Implementation>
    <LineIds Name="IOConversion">
      <LineId Id="10" Count="0" />
      <LineId Id="17" Count="0" />
      <LineId Id="19" Count="0" />
      <LineId Id="70" Count="0" />
      <LineId Id="11" Count="2" />
      <LineId Id="71" Count="0" />
      <LineId Id="73" Count="1" />
      <LineId Id="18" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="77" Count="0" />
      <LineId Id="93" Count="0" />
      <LineId Id="84" Count="0" />
      <LineId Id="102" Count="0" />
      <LineId Id="94" Count="0" />
      <LineId Id="25" Count="0" />
      <LineId Id="85" Count="1" />
      <LineId Id="24" Count="0" />
      <LineId Id="26" Count="0" />
      <LineId Id="29" Count="1" />
      <LineId Id="51" Count="0" />
      <LineId Id="55" Count="3" />
      <LineId Id="27" Count="0" />
      <LineId Id="34" Count="2" />
      <LineId Id="60" Count="3" />
      <LineId Id="50" Count="0" />
      <LineId Id="52" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>